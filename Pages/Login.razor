@page "/"
@using StockApp.Models;
@inject ILocalStorageService LocalStorage

<PageTitle>Login</PageTitle>

<!-- Page Content -->
<div class="row gx-lg-5 align-items-center container">
    <!-- Login Row -->
    <div class="row gx-lg-5 align-items-center col-lg-5 my-4">
        <div class="col-lg-12">
            <h1 class="font-weight-light">LOGIN</h1>
            <br/><br/>
            <EditForm Model="@user" OnValidSubmit="ValidateUser">
                <div class="form-group">
                    <label style="color:darkblue;" for="username">Username</label>
                    <input type="text" class="form-control" id="username" @bind-value="userName" placeholder="Enter username">
                </div>
                <br/>
                <div class="form-group">
                    <label style="color:darkblue;" for="password">Password</label>
                    <input type="password" class="form-control" id="password" placeholder="Enter password">
                </div>
                <br/>
                <button type="submit" class="btn btn-primary">Login</button>
                <button class="btn btn-primary" @onclick="RegisterUser">Register</button>
                <p>Welcome user </p>
                @foreach (var user in userList)
                {
                    <p>@user</p>
                }
            </EditForm>
        </div>
    </div>
    <div class="col-lg-1"></div>
    <div class="col-lg-6">
        <img style="height:350px; width:100%;" src="https://s.wsj.net/public/resources/images/OG-CR604_201905_G_20190516154959.gif"/>
        <br/>
        <img style="height:360px; width:100%;" src="https://media.tenor.com/jw92b2HUuTAAAAAM/stonks-stocks.gif"/>
    </div>
</div>

@code {
    private User? user;
    private string userName;
    private string userPassword;
    private string[]? registerUser;
    protected override Task OnInitializedAsync()
    {
        user = new User();
        return base.OnInitializedAsync();
    }
    private async Task<bool> ValidateUser()
    {
        return await Task.FromResult(true);
    }
    private List<string> userList = new List<string>();
    private async Task RegisterUser()
    {
        await LocalStorage.SetItemAsync("userPassword",user.userPassword);
        await LocalStorage.SetItemAsync<string[]>("userName",userList.ToArray()); 
        userList.Add(userName);
    }
}
